

### **1. 代码精简提示词**（解决冗余问题）
"请帮我审查现有CSS代码：
1. 合并重复的样式规则（如相同颜色值/margin值）
2. 将多行样式简写为单行（如padding: 0 10px 0 10px → padding: 0 10px）
3. 删除所有未使用的空选择器和注释
4. 将超过3次使用的颜色值替换为CSS变量"


### **2. 文件结构优化提示词**（解决文件碎片化）
"请重构样式文件结构：
1. 将全局样式合并到/src/assets/styles/ 目录下：
   - base.scss (基础样式)
   - variables.scss (CSS变量)
   - utilities.scss (工具类)
2. 每个Vue组件使用`<style scoped>`局部样式
3. 删除所有重复的reset.css文件"

示例目录结构：
```
src/
├─ assets/
│  └─ styles/
│     ├─ variables.scss
│     ├─ base.scss
│     └─ utilities.scss
├─ components/
│  └─ Button.vue  // 包含scoped样式
```

---

### **3. 现代CSS方案提示词**（提升可维护性）
"请用以下方案重构代码：
1. 使用Tailwind工具类替换30%的自定义CSS
2. 为所有组件样式添加`scoped`属性
3. 将媒体查询集中到variables.scss
4. 用flex/grid布局替代float定位"

示例改造：
```vue
<!-- 优化前 -->
<div class="container">
  <div class="left-column"></div>
  <div class="right-column"></div>
</div>

<style>
.container {
  width: 100%;
}
.left-column {
  float: left;
  width: 200px;
}
.right-column {
  margin-left: 200px;
}
</style>

<!-- 优化后 -->
<div class="flex w-full">
  <div class="w-[200px]"></div>
  <div class="flex-1"></div>
</div>
```

---

### **4. 生产优化提示词**（减小打包体积）
"请配置：
1. 在vite.config.js中添加PurgeCSS插件
2. 开启CSS代码压缩
3. 将字体图标替换为SVG雪碧图
4. 自动添加浏览器前缀"

示例vite配置：
```javascript
// vite.config.js
export default {
  css: {
    postcss: {
      plugins: [
        require('postcss-preset-env'),
        require('cssnano')({ preset: 'default' })
      ]
    }
  }
}
```

---

### **5. 渐进式优化提示词**（分步骤改造）
分阶段提示词示例：
```markdown
第一阶段：基础清理
"请先执行：
1. 扫描所有CSS文件生成使用率报告
2. 删除未使用的CSS规则（匹配率<90%的选择器）
3. 合并相同的媒体查询条件

第二阶段：结构优化
1. 创建design tokens系统（使用CSS变量）
2. 将字体大小转换为rem单位
3. 用CSS grid重构复杂布局

第三阶段：高级优化
1. 实现按需加载CSS（动态import）
2. 添加CSS样式校验规则（stylelint）
3. 生成CSS架构文档"
```

---
请帮我优化现有Vue3项目的CSS架构：
1. 合并重复的样式规则（如相同颜色值/margin值）
2. 将多行样式简写为单行（如padding: 0 10px 0 10px → padding: 0 10px）
3. 删除所有未使用的空选择器和注释
4. 将超过3次使用的颜色值替换为CSS变量
5. 将全局样式合并到/src/assets/styles/ 目录下
6. 用Element Plus替换至少40%的自定义样式